
栞 tut_start

//クリアー：以前生成された全てのリソースを解除 （絵、背景、バトン、背景音楽・・・）
//注：クリアーはスクリプト編集時には作動しません。
クリア
~バックログリセット

//注:　背景はゲームの解像度と同じ規格ににストレッチされます
背景 bg2 Classroom_03_day.jpg

背景音 morikaji6.ogg 反復
//イン 背景音 5000

//注: system_menu.txtがtextbox_sample.txtの後に
//来てはなりません。
//system_menu.txt上での最後の使用文字窓命令は
//こちらが望む使用文字窓を設定していません。
//(こちらが望む文字窓はtextbox_sample.txtに設定されています）

//スクリプト system\sys_menu.txt
スクリプト textbox_sample.txt textbox_noautowait

//下のコメントを解いてみるとどんな現象が起きるのか確認してみてください。
//スクリプト system_menu.txt

"イメージ、演出 チュートリアルへようこそ。
.基本的イメージ操作、及び動きに関して紹介します。\w

~///////////////////////////////////////////////////////////////

絵 alice1 scg2.png 300 180 80
イン alice1 300

絵 alice2 scg2.png 240 180 79
イン alice2 300

"<レイヤー>
"ルール)イメージはレイヤー順になっています。\w
.レイヤーが高いほど前に表示されます。
.例えば、'alice2' (左：レイヤー７９）は
.'alice1'（右：レイヤー８０）の後ろに表示されています。\w

"もし二つ以上のイメージが同じレイヤーに存在している場合、
.後に宣言されたイメージが前に表示されます。\w

~アウト alice1
アウト alice2

絵 alice1 scg2.png 300 180 80
イン alice1 300

絵 ace1 scg1.png 190 0 80
イン ace1 300

-".こんな風に。
(alice1:レイヤー80, ace1:レイヤー80)\w

~絵 alice1 scg2.png 300 180 80
~//レイヤ alice1 81
~//レイヤ alice1 7
"同時に、これはイメージが再宣言されるとそのレイヤーの一番前に表示されるように
なる事を意味します。\w

"レイヤーに最大・最小値はないんですが
.絵は80台、UI(ユーザー・インターフェース：メニュー等)は100以上等
.（背景は自動的に０に設定されています）
.各要素の管理を分かりやすくする為少し離れた数字範囲に分けて使う
.事をお勧めします。\w

~//画像 alice1 scg1.png

~///////////////////////////////////////////////////////////////

"<動きー基本ー>\w
"ルール）動きに関した命令群は相対的動き、絶対的動きに分けて使えられます。\w

"相対的動き: (x:+200, y:-10)\w
~移動 alice1 +200 -10 800 t2
-".現在座標からx方向に+200, y方向に-10移動させます。\w
.注：マウスの現在ゲーム上位置がエディターの下に表示されています。
 座標に関する命令群を使う時（絵の位置等）是非その情報を活用してください。\w

"絶対的動き: (x:300, y:230) \w
~移動 alice1 300 230 1500
-".画面上の絶対座標、x:300, y:230に移動させます。\w

~//注：現在移動関連コマンド群は加速度設定がありません。
//アップデート予定です。

"ルール)　動きに関する命令群は通常全部同時に行われます。\w

~//同時移動
移動 ace1 +100 0 1500
移動 ace1 +200 0 1800

"それによって、上の二つの命令の結果はx方向に＋３００に移動するのではなく、
+２００になります。（ace1の最初x: 100, 最後x: 300）
.同じ理由で上の二つの移動命令の総所要時間は1.8秒(１８００ms)になります。\w
動きが同時に行われるため、総所要時間＝もっと長い動き、になるからです。\w
 
~絵 ace1 scg1.png 100 0 80

"二つの命令でx方向での+300を得るには、シンクロ命令（同期化命令）、
の概念を必要とします。\w
"動きに関した命令の前に’.'を置くとその命令が終わるまで次の命令が行われないように
します。\w

~//シンクロ移動

.移動 ace1 +100 0 1500
移動 ace1 +200 0 1800

"最初の移動をシンクロ化した為、x方向での+300移動を果たしました。\w
.また、これで結果的に総所要時間も3.3秒(3300ms)に伸びました。\w
.ちなみにこのテキストが二つ目の移動の途中に表示されたのは二つ目の移動命令を
シンクロ化にしなかったからです。\w

~///////////////////////////////////////////////////////////////
栞 カメラ移動例
~アウト alice1
絵 alice1 scg2.png 100 180 80 カメラ無視

"<回転・拡大> 
.回転と拡大の例を簡単にお見せします。\w

"回転：180度 
..注：回転の中心はイメージ画像の中心です。
.(イメージ全体の縦幅中心x横幅中心)
~.回転 ace1 180 1500
-"\w

"拡大：50％ 
..注：拡大100%にすると元の大きさに戻ります。
~.拡大  ace1 50% 1500
-"\w

"回転：270度 
~.回転 ace1 270 1500
-"\w

"拡大：150％ 
~.拡大  ace1 150% 1500
-"\w

"回転：840度 
..注：このように、回転が360度を超えると一回以上廻ります。
~.回転 ace1 840 1500
-"\w

~//.拡大 textbox0 50% 1500
~//回転 textbox0 27 1500

"同時適用：
..演出効果を複数の対象に同時適用する事も可能です。
~回転 ace1, alice1 360 1500
~.移動 ace1, alice1 +300 +0 1500
-"\w

~///////////////////////////////////////////////////////////////
栞 カメラ移動例
"<カメラ動きー基本ー> \w

~アウト alice1
絵 alice1 scg2.png 200 180 80 カメラ無視

"カメラ動きもイメージ演出と同じ命令群(移動,拡大等)を使います。\w
.単に演出対象をイメージの名前じゃなく「カメラ」と入力します。\w

"カメラ揺らぎの例：左<->右 \w

~//注：下のように座標に関する命令の使用が多い場合
//エディターのしたのゲーム上マウス座標情報を是非
//活用してください。

.移動 カメラ +100 0 80
.移動 カメラ -200 0 80
.移動 カメラ +200 0 80
.移動 カメラ -200 0 80
.移動 カメラ +200 0 80
.移動 カメラ -200 0 80
.移動 カメラ +200 0 80
.移動 カメラ 0 0 80

//注：相対的＋絶対的移動コマンドの適切な利用は
//このような動きをもっと簡単に、スクリプト上
//分かりやすく適用出来るようにします。

"ここで alice1 がカメラ移動の影響を受けないのは
.彼女に「カメラ無視」オプションを設定したからです。
..(テキストボックスにも同じく「カメラ無視」を付けおりますので
.カメラ動きの影響を現在受けていません) \w

~//注：文字窓のカメラ無視設定は「textbox_sample.txt」を参照

"カメラ揺らぎの例：上<->下 \w

~.移動 カメラ 0 +100 80
.移動 カメラ 0 -200 80
.移動 カメラ 0 +200 80
.移動 カメラ 0 -200 80
.移動 カメラ 0 +200 80
.移動 カメラ 0 -200 80
.移動 カメラ 0 +200 80
.移動 カメラ 0 0 80

~回転 カメラ 20 1000
"カメラ回転：20度 \w

"カメラ拡大：50%
~.拡大  カメラ 50% 1500
-"\w

"カメラで色々... 
~.拡大 カメラ 100% 300
~.拡大 カメラ 50% 300
~.拡大 カメラ 80% 300
~.拡大 カメラ 50% 300
~回転 カメラ 360 1000
~.拡大 カメラ 100% 1500
-"完了!
..お疲れ様でした！ \w

~//.移動 カメラ +100 +100 80
カメラ初期化

~ジャンプ start0.txt tutorial_jump

